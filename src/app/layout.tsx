import { ReactNode, useEffect } from 'react'
import type { Metadata } from 'next'
import '@/styles/globals.css'
import { Provider } from 'react-redux'
import CssBaseline from '@mui/material/CssBaseline'

import PageLayout from '@/components/common/PageLayout'
import createEmotionCache from '@/utils/createEmotionCache'
import PacketThemeProvider from '@/components/theme/PacketThemeProvider'
import { useDarkMode } from '@/hooks/useDarkMode'
import { headers } from 'next/headers'
import { cookieToInitialState } from 'wagmi'
import { config } from '@/config/wagmi'
import WalletProvider from '@/components/common/WalletProvider'
import { useInitOnboard } from '@/hooks/wallets/useOnboard'
import { makeStore, useHydrateStore } from '@/store'
import useLoadableStores from '@/hooks/useLoadableStores'
import { useInit } from '@/hooks/useInit'
import StoreProvider from '@/components/StoreProvider'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

// Client-side cache, shared for the whole session of the user in the browser.
const clientSideEmotionCache = createEmotionCache()

export const AppProviders = ({ children }: { children: ReactNode | ReactNode[] }) => {
  const isDarkMode = useDarkMode()
  const themeMode = isDarkMode ? 'dark' : 'light'

  return (
    <PacketThemeProvider mode={themeMode}>
      <WalletProvider>{children}</WalletProvider>
    </PacketThemeProvider>
  )
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="en">
      <StoreProvider>
        <body>
          <AppProviders>
            <CssBaseline />
            <PageLayout>{children}</PageLayout>
          </AppProviders>
        </body>
      </StoreProvider>
    </html>
  )
}
